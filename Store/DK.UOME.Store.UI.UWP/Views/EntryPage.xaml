<StoreFramework:BaseStorePage
    x:Class="DK.UOME.Store.UI.UWP.Views.EntryPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:DK.UOME.Store.UI.UWP.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:DesignData="using:DK.UOME.Store.UI.UWP.DesignData"
    xmlns:CoreConverters="using:DK.Framework.UWP.Converters"
    xmlns:StoreFramework="using:DK.Framework.UWP"
    d:DataContext="{d:DesignInstance Type=DesignData:DesignEntryViewModel, IsDesignTimeCreatable=True}">

    <Page.Resources>
        <CoreConverters:BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <CoreConverters:BooleanNegationConverter x:Key="NegationConverter"/>
    </Page.Resources>

    <Page.BottomAppBar>
        <CommandBar>
            <AppBarButton x:Name="SecondaryTilePinButton" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Label="Pin" Icon="Pin" Visibility="{Binding IsEntryPinned, ConverterParameter=1, Converter={StaticResource BoolToVisibilityConverter}}" Click="OnSecondaryTilePinButtonClick" IsEnabled="{Binding IsNewEntry, Converter={StaticResource NegationConverter}}" />
            <AppBarButton x:Name="SecondaryTileUnpinButton" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Label="Unpin" Icon="UnPin" Visibility="{Binding IsEntryPinned, Converter={StaticResource BoolToVisibilityConverter}}" Click="OnSecondaryTileUnpinButtonClick" IsEnabled="{Binding IsNewEntry, Converter={StaticResource NegationConverter}}" />
            <AppBarButton HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Label="Save" Icon="Save" Click="OnSaveAppBarButtonClick"/>
            <AppBarButton HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Label="Cancel" Icon="Cancel" Click="OnCancelAppBarButtonClick"/>
            <AppBarButton HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Label="Delete" Icon="Delete" Click="OnDeleteAppBarButtonClick" />
        </CommandBar>
    </Page.BottomAppBar>

    <ScrollViewer HorizontalAlignment="Stretch" VerticalAlignment="Top">
        <Grid>

            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <TextBlock x:Name="pageTitle" Text="{Binding Label}" FontSize="18.667" HorizontalAlignment="Left" VerticalAlignment="Center" />

            <!-- Main area of screen -->
            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Grid.Resources>
                    <Style x:Key="LabelStyle" TargetType="TextBlock" >
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                        <Setter Property="TextWrapping" Value="Wrap"/>
                        <Setter Property="VerticalAlignment" Value="Top"/>
                        <Setter Property="Margin" Value="0,15"/>
                    </Style>

                    <Style x:Key="InputStyle" TargetType="TextBox">
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                        <Setter Property="VerticalAlignment" Value="Top"/>
                        <Setter Property="Width" Value="350"/>
                    </Style>

                    <Style x:Key="ErrorStyle" TargetType="TextBlock">
                        <Setter Property="Foreground" Value="Red"/>
                    </Style>
                </Grid.Resources>

                <TextBlock Text="{Binding Entry.ThingLabel}" Style="{StaticResource LabelStyle}"/>
                <TextBox Text="{Binding Entry.Thing, Mode=TwoWay}" StoreFramework:UpdateSourceHelper.IsEnabled="True" StoreFramework:UpdateSourceHelper.UpdateSourceText="{Binding Entry.Thing, Mode=TwoWay}" Style="{StaticResource InputStyle}" Grid.Row="1"/>
                <TextBlock Grid.Row="2" DataContext="{Binding Entry.MessageDictionary}" Text="{Binding [Thing]}" Style="{StaticResource ErrorStyle}" />

                <TextBlock Text="{Binding Entry.OtherPartyLabel}" Grid.Row="3" Style="{StaticResource LabelStyle}"/>
                <TextBox Text="{Binding Entry.OtherParty, Mode=TwoWay}" StoreFramework:UpdateSourceHelper.IsEnabled="True" StoreFramework:UpdateSourceHelper.UpdateSourceText="{Binding Entry.OtherParty, Mode=TwoWay}" Style="{StaticResource InputStyle}" Grid.Row="4"/>
                <TextBlock Grid.Row="5" DataContext="{Binding Entry.MessageDictionary}" Text="{Binding [OtherParty]}" Style="{StaticResource ErrorStyle}" />

                <StackPanel Orientation="Horizontal" Grid.Row="6" HorizontalAlignment="Left">
                    <TextBlock Text="Is Due"  Style="{StaticResource LabelStyle}"/>
                    <CheckBox IsChecked="{Binding Path=Entry.HasDueDate, Mode=TwoWay}" Margin="10,0,0,0" />
                </StackPanel>

                <TextBlock Text="Due Date" Grid.Row="7" Style="{StaticResource LabelStyle}"/>
                <DatePicker Date="{Binding Entry.DueDate}" Grid.Row="8" IsEnabled="{Binding Entry.HasDueDate, Mode=TwoWay}" />
                <TextBlock Grid.Row="9" DataContext="{Binding Entry.MessageDictionary}" Text="{Binding [DueDate]}" Style="{StaticResource ErrorStyle}" />

                <TextBlock Text="Notes" Grid.Row="10" Style="{StaticResource LabelStyle}"/>
                <TextBox Text="{Binding Entry.Note, Mode=TwoWay}" Grid.Row="11" Height="150" TextWrapping="Wrap" Width="360" HorizontalAlignment="Left"/>

            </Grid>

        </Grid>
    </ScrollViewer>
</StoreFramework:BaseStorePage>
